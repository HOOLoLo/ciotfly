//			continue ;
			/*iret = last_xyz(x,y,z,50) ;


			printf("%d,%d,%d\n",x,y,z) ;

			if(iret == 3)
			{
				x = ax ;
				y = ay ;
				z = az ;

			}*/
			//printf("x:%d,y:%d,z:%d,avg x:%d,y:%d\n",x,y,z,ax,ay) ;

			/*if((judge_dir=judge_index(x,y))!=-1) {
			//printf("%d\n",judge_dir) ;
				if(point_short[judge_dir][0]==point_short[judge_dir+1][0]){
					xxx = point_short[judge_dir][0] ;
	//				printf("%d\n",xxx) ;
					yyy = 0 ;
				}else if(point_short[judge_dir][1]==point_short[judge_dir+1][1]){
					yyy = point_short[judge_dir][1] ;
	//				printf("%d\n",yyy) ;
					xxx = 0 ;
				}

				//判断飞行方向，x+,x-,y+,y-
				{//x+,x-,y+,y-
					avg_x[index_x%avg_num_xy] = x ;
					avg_y[index_y%avg_num_xy] = y ;
					avgx = avg_x[0] ;
					avgy = avg_y[0] ;
					for(i=1;i<avg_num_xy;i++){
						avgx += avg_x[i] ;
						avgy += avg_y[i] ;
					}
					avgx = avgx/avg_num_xy ;
					avgy = avgy/avg_num_xy ;
					if(avgx - x<-30){
						front_back = 1 ;
					}else if(avgx-x>30){
						front_back = 2 ;
					}else if(avgy-y<-30){
						front_back = 3 ;
					}else if(avgy-y>30){
						front_back = 4 ;
					}else{
						front_back = 0 ;
					}
				}*/
				/*front_back = 1;
				//int front_back 0,1,x+,2,x-,3,y+,4,y- ;
				pthread_mutex_lock(&mutex);
				left_right = i_lr ;
				i_lr=0 ;
				pthread_mutex_unlock(&mutex);

				switch(front_back){
				case 1:
					switch(left_right){
					case LEFT://left
						if(y<yyy)
							y=yyy ;
						break;
					case RIGHT://right
						if(y>yyy&&yyy!=0)
							y=yyy ;
						break ;
					default:
						break ;
					}
					break ;
				case 2:
					switch(left_right){
					case LEFT://left
						if(y>yyy&&yyy!=0)
							y=yyy ;
						break;
					case RIGHT://right
						if(y<yyy)
							y=yyy ;
						break ;
					default:
						break ;
					}
					break ;
				case 3:
					switch(left_right){
					case LEFT://left
						if(x>xxx&&xxx!=0)
							x=xxx ;
						break;
					case RIGHT://right
						if(x<xxx)
							x=xxx ;
						break ;
					default:
						break ;
					}
					break ;
				case 4:
					switch(left_right){
					case LEFT://left
						if(x<xxx)
							x=xxx ;
						break;
					case RIGHT://right
						if(x>xxx&&xxx!=0)
							x=xxx ;
						break ;
					default:
						break ;
					}
					break;
				default:
					break ;
				}
			}*/